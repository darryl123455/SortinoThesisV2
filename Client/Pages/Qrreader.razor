@page "/Qrreader"
@using Microsoft.AspNetCore.Authorization
@using SortinoThesisV2.Shared
@using ReactorBlazorQRCodeScanner
@using System.IO
@attribute [Authorize]
@inject HttpClient Http
@inject IJSRuntime JS
@inject NavigationManager Navigation

<PageTitle>QR Code Reader Page</PageTitle>

<h3>QR Code Reader Page</h3>

<QRCodeScanner />

@code {
    private QRCodeScannerJsInterop? _qrCodeScannerJsInterop;
    private Action<string>? _onQrCodeScanAction;

    protected override async Task OnInitializedAsync()
    {
        _onQrCodeScanAction = (code) => OnQrCodeScan(code);

        _qrCodeScannerJsInterop = new QRCodeScannerJsInterop(JS);
        await _qrCodeScannerJsInterop.Init(_onQrCodeScanAction);
    }

    private void OnQrCodeScan(string code)
    {
        Console.WriteLine($"OnQrCodeScan {code}");

        // Ensure the code has a scheme; add "https://" if it doesn't
        if (!code.StartsWith("http://") && !code.StartsWith("https://"))
        {
            code = "https://" + code;
        }

        if (Uri.TryCreate(code, UriKind.Absolute, out var uriResult)
            && (uriResult.Scheme == Uri.UriSchemeHttp || uriResult.Scheme == Uri.UriSchemeHttps))
        {
            // Open in a new tab using JavaScript
            JS.InvokeVoidAsync("open", code, "_blank");
        }
        else
        {
            Console.WriteLine("Scanned content is not a valid URL.");
        }
    }
}
