@page "/Qr"
@using Microsoft.AspNetCore.Authorization
@using SortinoThesisV2.Shared
@using QRCoder
@using System.IO
@attribute [Authorize]
@inject HttpClient Http

<PageTitle>QR Code Page</PageTitle>

<h3>QR Code Generation</h3>

<!-- Dropdown for material selection -->
<select @onchange="OnMaterialChanged" class="form-control">
    <option value="" disabled selected>Select Material</option>
    <option value="biodegradable">Biodegradable</option>
    <option value="plastic">Plastic</option>
    <option value="metal">Metal</option>
</select>

<br />
<br />
@if (!string.IsNullOrEmpty(QRCodeStr))
{
    <img src="@QRCodeStr" style="width:200px; height:200px;" />
}

@code {
    string QRCodeStr { get; set; } = "";

    // Method to call when material selection changes
    private void OnMaterialChanged(ChangeEventArgs e)
    {
        string selectedMaterial = e.Value.ToString();
        GenerateQRCodeForMaterial(selectedMaterial); // Generate QR code when selection changes
    }

    // Generate QR Code based on selected material
    public void GenerateQRCodeForMaterial(string material)
    {
        QRCodeStr = ""; // Clear any previous QR code

        if (IsValidMaterialType(material))
        {
            using (MemoryStream ms = new MemoryStream())
            {
                using (QRCodeGenerator qrGenerator = new QRCodeGenerator())
                using (QRCodeData qrCodeData = qrGenerator.CreateQrCode(material, QRCodeGenerator.ECCLevel.Q))
                using (PngByteQRCode qrCode = new PngByteQRCode(qrCodeData))
                {
                    byte[] qrCodeImage = qrCode.GetGraphic(20);
                    QRCodeStr = "data:image/png;base64," + Convert.ToBase64String(qrCodeImage);
                }
            }
        }
        else
        {
            // Optionally display an error message if input is invalid
            QRCodeStr = "Invalid material type.";
        }
    }

    // Validate material type input
    private bool IsValidMaterialType(string material)
    {
        return material.ToLower() == "plastic" || material.ToLower() == "biodegradable" || material.ToLower() == "metal";
    }
}
